/*
09:膨胀的木棍
查看 提交 统计 提问
总时间限制: 1000ms 内存限制: 65536kB
描述
当长度为L的一根细木棍的温度升高n度，它会膨胀到新的长度L'=(1+n*C)*L，其中C是热膨胀系数。

当一根细木棍被嵌在两堵墙之间被加热，它将膨胀形成弓形的弧，而这个弓形的弦恰好是未加热前木棍的原始位置。

你的任务是计算木棍中心的偏移距离。



输入
三个非负实数：木棍初始长度（单位：毫米），温度变化（单位：度），以及材料的热膨胀系数。
保证木棍不会膨胀到超过原始长度的1.5倍。
输出
木棍中心的偏移距离（单位：毫米），保留到小数点后第三位。
*/

#include<bits/stdc++.h>
using namespace std;
int main()
{
    double x=0,y=asin(1.0),l,L,n,c,mid;
    //x为二分的最小值，y为最大值
    cin>>l>>n>>c;
    L=(1+n*c)*l;
    //相当于已知圆中的弧长和弦长，求角度
    //根据 弧长=圆心角*半径，二分角度找出计算结果最接近弧长的值，再计算偏移距离
    if(l*n*c==0)
        {puts("0.000");return 0;}
    for(int i=0;i<1000000;i++)
    {//二话不说直接一百万,must be true...
        mid=(x+y)/2;
        if(mid*(l/sin(mid))>=L)
            y=mid;//由于枚举角度后存在单调性，就可以二分角度了。
        else
            x=mid;
    }
    printf("%.3lf\n",L/(2*x)*(1-cos(y)));
    return 0;
}
